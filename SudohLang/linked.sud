// create a new empty linked list
procedure List
	output {
		"\"head\"\n" <- null,
		"tail" <- null,
		"size" <- 0
		}


// add a new element to the linked list
procedure add <- list, val
	node <- {
		"val" <- val,
		"next" <- null,
		"prev" <- null
		}

	if list["size"] = 0 then
		list["head"] <- node
	else
		curr <- list["head"]
		until curr["next"] = null do
			curr <- curr["next"]

		curr["next"] <- node
		node["prev"] <- curr

	list["tail"] <- node
	list["size"] <- list["size"] + 1


// removes a node from a linked list with the given value
procedure removeItem <- list, val
	curr <- list["head"]
	while curr != null and curr["val"] != val do
		curr <- curr["next"]

	if curr = null then
		exit

	if curr = list["head"] then
		list["head"] <- curr["next"]
	else
		curr["prev"]["next"] <- curr["next"]

	if curr = list["tail"] then
		list["tail"] <- curr["prev"]
	else
		curr["next"]["prev"] <- curr["prev"]

	list["size"] <- list["size"] - 1


// remove an element from the linked list at the given index
procedure removeIndex <- list, index
	curr <- list["head"]
	if curr = null then
		exit

	for i <- 1 to index do
		if curr = null then
			output "out of bounds"
		curr <- curr["next"]

	if curr = list["head"] then
		list["head"] <- curr["next"]
	else
		curr["prev"]["next"] <- curr["next"]

	if curr = list["tail"] then
		list["tail"] <- curr["prev"]
	else
		curr["next"]["prev"] <- curr["prev"]

	list["size"] <- list["size"] - 1


// prints all of the elements in a linked list
procedure printList <- list
	curr <- list["head"]
	print("[")
	until curr = null do
		print(curr["val"])
		if curr["next"] != null then
			print(",")
		curr <- curr["next"]

	printLine("]")


// prints all of the elements in a linked list in reverse order
procedure printBackwards <- list
	curr <- list["tail"]
	print("[")
	until curr = null do
		print(curr["val"])
		if curr["prev"] != null then
			print(",")
		curr <- curr["prev"]

	printLine("]")

list <- List()
removeIndex(list, 1.5)
removeIndex(list, -1)
removeItem(list, 4)

for i <- 1 to 20 do
	add(list, i)

removeIndex(list, 0)
removeIndex(list, 18)
removeIndex(list, 10)

removeItem(list, 2)
removeItem(list, 19)
removeItem(list, 5)

printList(list)
printBackwards(list)
